package ch05.leetCode;

public class matrixDiagonalSum1572 {
    public static int main(String[] args) {
        int[][] mat = {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 9}
        };

        int n = mat.length;  //👉 행렬의 행 수(또는 열 수)를 n에 저장해요. 정사각형이라 행과 열 수는 같아요. 예: [[1,2,3], [4,5,6], [7,8,9]] 라면 n = 3
        int sum = 0; // 👉 대각선 숫자들을 더할 변수예요. 처음엔 0으로 시작하죠.

        for (int i = 0; i < n; i++) { // 👉 i는 0부터 시작해서 n보다 작을 때까지 반복해요. 즉, 행렬의 모든 줄을 돌 거예요.
            // 주대각선
            sum += mat[i][i]; // 👉 주대각선(왼쪽 위에서 오른쪽 아래)의 값을 더해요. 예: i=0이면 mat[0][0], i=1이면 mat[1][1], i=2이면 mat[2][2]
            // 부대각선
            sum += mat[i][n - 1 - i]; // 👉 부대각선(오른쪽 위에서 왼쪽 아래)의 값을 더해요. 예: i=0이면 mat[0][2], i=1이면 mat[1][1], i=2이면 mat[2][0]
        }

        // 행렬 크기가 홀수면 가운데 겹치는 숫자 한 번 빼기
        if (n % 2 == 1) { // 👉 행렬의 크기가 홀수인지 확인해요. 왜냐면 홀수일 때는 정중앙 숫자가 두 번 더해졌기 때문이에요. (주대각선과 부대각선에 모두 있으니까요)
            sum -= mat[n / 2][n / 2]; // 👉 겹쳐서 두 번 더한 중앙 숫자를 한 번 빼줍니다. 예: mat[1][1] = 5가 주대각선, 부대각선 둘 다 겹치면 → 한 번 빼줘야 정답이 돼요.
        }

        return sum; // 👉 최종 결과인 sum을 리턴해요.


    }
}

